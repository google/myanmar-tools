// Transliteration rules for converting Burmese Unicode to Zawygi encoded
function U2Ztransliterate(inString) {
  var outString = inString;

  // Rules for phase 0
  var rules0 = [
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B', 'u'),
      s: '$1\u103A\u1064',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u102D\u1036', 'u'),
      s: '$1\u108E',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u102D', 'u'),
      s: '$1\u108B',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u102E', 'u'),
      s: '$1\u108C',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u1036', 'u'),
      s: '$1\u108D',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u1031', 'u'),
      s: '$1\u1031\u1064',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B\u102D\u102F', 'u'),
      s: '$1\u103A\u1033\u108B',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B\u102D', 'u'),
      s: '$1\u103A\u108B',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B\u102E\u102F', 'u'),
      s: '$1\u103A\u108C\u1033',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B\u102E', 'u'),
      s: '$1\u103A\u108C',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103B\u1036', 'u'),
      s: '$1\u103A\u108D',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])\u103C', 'u'),
      s: '$1\u103B\u1064',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039\u102D', 'u'),
      s: '\u108B',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039\u102E', 'u'),
      s: '\u108C',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039\u1036', 'u'),
      s: '\u108D',
    },
    {
      p: RegExp('^' + '[\u1004\u101B\u105A]\u103A\u1039([\u1000-\u1021])', 'u'),
      s: '$1\u1064',
    },
    {
      p: RegExp('^' + '\u1025([\u102B-\u1030\u1032])\u1038', 'u'),
      s: '\u106A$1\u1038',
    },
    {
      p: RegExp('^' + '\u1025\u102F\u1036', 'u'),
      s: '\u1025\u1036\u1033',
    },
    {
      p: RegExp('^' + '\u102D\u1036', 'u'),
      s: '\u108E',
    },
    {
      p: RegExp('^' + '\u103D\u103E', 'u'),
      s: '\u108A',
    },
    {
      p: RegExp('^' + '\u103E\u102F', 'u'),
      s: '\u1088',
    },
    {
      p: RegExp('^' + '\u103E\u1030', 'u'),
      s: '\u1089',
    },
    {
      p: RegExp('^' + '\u103A', 'u'),
      s: '\u1039',
    },
    {
      p: RegExp('^' + '\u103B', 'u'),
      s: '\u103A',
    },
    {
      p: RegExp('^' + '\u103C', 'u'),
      s: '\u103B',
    },
    {
      p: RegExp('^' + '\u103D', 'u'),
      s: '\u103C',
    },
    {
      p: RegExp('^' + '\u103E', 'u'),
      s: '\u103D',
    },
    {
      p: RegExp('^' + '\u103F', 'u'),
      s: '\u1086',
    },
    {
      p: RegExp('^' + '([\u1019])\u103E\u1030', 'u'),
      s: '$1\u103D\u1034',
    },
    {
      p: RegExp('^' + '\u102B\u103A', 'u'),
      s: '\u105A',
    },
    {
      p: RegExp('^' + '\u1025\u1079', 'u'),
      s: '\u1009\u1039\u1016',
    },
    {
      p: RegExp('^' + '\u1039\u1010\u103D', 'u'),
      s: '\u1096',
    },
    {
      p: RegExp('^' + '\u1039\u1000', 'u'),
      s: '\u1060',
    },
    {
      p: RegExp('^' + '\u1039\u1001', 'u'),
      s: '\u1061',
    },
    {
      p: RegExp('^' + '\u1039\u1002', 'u'),
      s: '\u1062',
    },
    {
      p: RegExp('^' + '\u1039\u1003', 'u'),
      s: '\u1063',
    },
    {
      p: RegExp('^' + '\u1039\u1005', 'u'),
      s: '\u1065',
    },
    {
      p: RegExp('^' + '\u1039\u1006', 'u'),
      s: '\u1067',
    },
    {
      p: RegExp('^' + '\u1039\u1007', 'u'),
      s: '\u1068',
    },
    {
      p: RegExp('^' + '\u1039\u1008', 'u'),
      s: '\u1069',
    },
    {
      p: RegExp('^' + '\u1039\u100B', 'u'),
      s: '\u106C',
    },
    {
      p: RegExp('^' + '\u1039\u100C', 'u'),
      s: '\u106D',
    },
    {
      p: RegExp('^' + '\u1039\u100D', 'u'),
      s: '\u106E',
    },
    {
      p: RegExp('^' + '\u100D\u1039\u100E', 'u'),
      s: '\u106F',
    },
    {
      p: RegExp('^' + '\u1039\u100E', 'u'),
      s: '\u106F',
    },
    {
      p: RegExp('^' + '\u1039\u100F', 'u'),
      s: '\u1070',
    },
    {
      p: RegExp('^' + '\u1039\u1010', 'u'),
      s: '\u1072',
    },
    {
      p: RegExp('^' + '\u1039\u1011', 'u'),
      s: '\u1074',
    },
    {
      p: RegExp('^' + '\u1039\u1012', 'u'),
      s: '\u1075',
    },
    {
      p: RegExp('^' + '\u1039\u1013', 'u'),
      s: '\u1076',
    },
    {
      p: RegExp('^' + '\u1039\u1014', 'u'),
      s: '\u1077',
    },
    {
      p: RegExp('^' + '\u1039\u1015', 'u'),
      s: '\u1078',
    },
    {
      p: RegExp('^' + '\u1039\u1016', 'u'),
      s: '\u1079',
    },
    {
      p: RegExp('^' + '\u1039\u1017', 'u'),
      s: '\u107A',
    },
    {
      p: RegExp('^' + '\u1039\u1018', 'u'),
      s: '\u1093',
    },
    {
      p: RegExp('^' + '\u1039\u1019', 'u'),
      s: '\u107C',
    },
    {
      p: RegExp('^' + '\u1039\u101C', 'u'),
      s: '\u1085',
    },
    {
      p: RegExp('^' + '\u100F\u1039\u100D', 'u'),
      s: '\u1091',
    },
    {
      p: RegExp('^' + '\u100B\u1039\u100C', 'u'),
      s: '\u1092',
    },
    {
      p: RegExp('^' + '\u100B\u1039\u100B', 'u'),
      s: '\u1097',
    },
    {
      p: RegExp('^' + '\u104E\u1004\u103A\u1038', 'u'),
      s: '\u104E',
    },
  ];
  outString = runPhase(rules0, outString);
  // Rules for phase 1
  var rules1 = [
    {
      p: RegExp('^' + '([\u1000-\u1021])\u103B\u1031', 'u'),
      s: '\u1031\u103B$1',
    },
    {
      p: RegExp('^' + '([\u1000-\u1021])\u103B', 'u'),
      s: '\u103B$1',
    },
    {
      p: RegExp('^' + '([\u1000-\u1021])\u103D\u1031\u1037', 'u'),
      s: '\u1031$1\u1094\u103D',
    },
    {
      p: RegExp('^' + '([\u1000-\u1021])\u1064\u103B', 'u'),
      s: '\u103B$1\u1064',
    },
    {
      p: RegExp('^' + '([\u1000-\u1021])([\u103A\u103C\u103D])\u1031', 'u'),
      s: '\u1031$1$2',
    },
    {
      p: RegExp('^' + '([\u1000-\u102A])\u1031', 'u'),
      s: '\u1031$1',
    },
    {
      p: RegExp('^' + '\u1014([\u1060-\u1068\u106C\u106D\u1070-\u107C\u1085\u1093\u1096])', 'u'),
      s: '\u108F$1',
    },
    {
      p: RegExp('^' + '\u1014([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])\u1037', 'u'),
      s: '\u108F$1$2\u1094',
    },
    {
      p: RegExp('^' + '\u1014([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])\u1037', 'u'),
      s: '\u108F$1$2\u1094',
    },
    {
      p: RegExp('^' + '\u1014([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])\u1037', 'u'),
      s: '\u1014$1\u1094',
    },
    {
      p: RegExp('^' + '\u1014\u1032\u1037', 'u'),
      s: '\u1014\u1032\u1094',
    },
    {
      p: RegExp('^' + '\u1014\u1037', 'u'),
      s: '\u1014\u1094',
    },
    {
      p: RegExp('^' + '\u1014\u1032([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])\u1037', 'u'),
      s: '\u108F$1\u1032\u1094',
    },
    {
      p: RegExp('^' + '\u1014([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u108F$1$2',
    },
    {
      p: RegExp('^' + '\u1014([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])', 'u'),
      s: '\u108F$1$2',
    },
    {
      p: RegExp('^' + '\u1014([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])\u1037', 'u'),
      s: '\u108F$1\u1094',
    },
    {
      p: RegExp('^' + '\u1014([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u108F$1',
    },
    {
      p: RegExp('^' + '([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064]*)\u1037', 'u'),
      s: '$1$2\u1094',
    },
    {
      p: RegExp('^' + '([^\u1040-\u1049])\u1040([\u102B-\u103F])', 'u'),
      s: '$1\u101D$2',
    },
    {
      p: RegExp('^' + '\u1031\u1040([^\u1040-\u1049])', 'u'),
      s: '\u1031\u101D$1',
    },
    {
      p: RegExp('^' + '\u1025\u103A', 'u'),
      s: '\u1009\u103A',
    },
    {
      p: RegExp('^' + '\u1025\u102E', 'u'),
      s: '\u1026',
    },
    {
      p: RegExp('^' + '\u1037\u103A', 'u'),
      s: '\u103A\u1037',
    },
    {
      p: RegExp('^' + '([\u102B\u102C\u102F\u1030])([\u102D\u102E\u1032])', 'u'),
      s: '$2$1',
    },
    {
      p: RegExp('^' + '([\u103B\u107E-\u1084])([\u1000-\u1021])\u102F', 'u'),
      s: '$1$2\u1033',
    },
  ];
  outString = runPhase(rules1, outString);
  // Rules for phase 2
  var rules2 = [
    {
      p: RegExp('^' + '\u103C\u1094', 'u'),
      s: '\u103C\u1095',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])\u102D\u103D\u102F', 'u'),
      s: '\u107F$1\u102D\u1087\u1083',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])\u102D\u103D\u102F', 'u'),
      s: '\u1080$1\u102D\u1087\u1083',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])', 'u'),
      s: '\u1083$1$2$3',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])', 'u'),
      s: '\u1084$1$2$3',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])', 'u'),
      s: '\u107F$1$2',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])', 'u'),
      s: '\u1080$1$2',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])\u1030', 'u'),
      s: '\u103B$1\u1034',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])\u1030', 'u'),
      s: '\u107E$1\u1034',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])(\u102F)', 'u'),
      s: '\u103B$1\u1033',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])(\u102F)', 'u'),
      s: '\u107E$1\u1033',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u1081$1$2',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u1082$1$2',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u100A\u106B])', 'u'),
      s: '\u1082$1',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1009\u106A])', 'u'),
      s: '\u103B\u106A',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1001\u1002\u1004\u1005\u1007\u100B-\u100E\u1012\u1013\u1015-\u1017\u1019\u101D\u1020\u1025\u1026])', 'u'),
      s: '\u103B$1',
    },
    {
      p: RegExp('^' + '[\u103B\u107E-\u1084]([\u1000\u1003\u1006\u1009\u100A\u100F-\u1011\u1018\u101C\u101E\u101F\u1021])', 'u'),
      s: '\u107E$1',
    },
    {
      p: RegExp('^' + '\u1009([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u106A$1',
    },
    {
      p: RegExp('^' + '\u100A([\u102F\u1030\u1037\u103A\u103C\u103D\u1087-\u108A])', 'u'),
      s: '\u106B$1',
    },
    {
      p: RegExp('^' + '\u103D\u102D', 'u'),
      s: '\u102D\u103D',
    },
    {
      p: RegExp('^' + '\u103A([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])\u102F[\u1037\u1094\u1095]', 'u'),
      s: '\u103A$1\u1033\u1095',
    },
    {
      p: RegExp('^' + '\u103A\u102F[\u1037\u1094\u1095]', 'u'),
      s: '\u103A\u1033\u1095',
    },
    {
      p: RegExp('^' + '\u103A\u102F', 'u'),
      s: '\u103A\u1033',
    },
    {
      p: RegExp('^' + '\u1064\u102E', 'u'),
      s: '\u108C',
    },
  ];
  outString = runPhase(rules2, outString);
  // Rules for phase 3
  var rules3 = [
    {
      p: RegExp('^' + '([\u103C-\u103E]+)\u103B', 'u'),
      s: '\u103B$1',
    },
    {
      p: RegExp('^' + '([\u103D\u103E]+)\u103C', 'u'),
      s: '\u103C$1',
    },
    {
      p: RegExp('^' + '\u103E\u103D', 'u'),
      s: '\u103D\u103E',
    },
    {
      p: RegExp('^' + '\u1037([\u102D-\u1030\u1032\u1036])', 'u'),
      s: '$1\u1037',
    },
    {
      p: RegExp('^' + '([\u1000-\u1021])([\u102B-\u1032\u1036\u103B-\u103E])\u103A([\u1000-\u1021])', 'u'),
      s: '$1\u103A$2$3',
    },
    {
      p: RegExp('^' + '\u103D\u102F', 'u'),
      s: '\u1088',
    },
    {
      p: RegExp('^' + '\u1033\u1094', 'u'),
      s: '\u1033\u1095',
    },
    {
      p: RegExp('^' + '([\u103B\u107E-\u1084])([\u1000-\u1021])([\u102D\u102E\u1032\u1036\u1039\u103D\u103E\u1064])\u102F', 'u'),
      s: '$1$2$3\u1033',
    },
  ];
  outString = runPhase(rules3, outString);
  // Rules for phase 4
  var rules4 = [
    {
      p: RegExp('^' + '([\u103D\u103E])\u103C', 'u'),
      s: '\u103C$1',
    },
    {
      p: RegExp('^' + '\u103E\u103D', 'u'),
      s: '\u103D\u103E',
    },
    {
      p: RegExp('^' + '\u1038([\u102B-\u1030\u1032\u103C-\u103F])', 'u'),
      s: '$1\u1038',
    },
    {
      p: RegExp('^' + '\u1038([\u1036\u1037\u103A])', 'u'),
      s: '$1\u1038',
    },
    {
      p: RegExp('^' + '\u1036\u102F', 'u'),
      s: '\u102F\u1036',
    },
    {
      p: RegExp('^' + '\u103A([\u1064\u108B-\u108E])\u102D\u102F', 'u'),
      s: '\u103A$1\u102D\u1033',
    },
    {
      p: RegExp('^' + '\u103A\u102D\u102F', 'u'),
      s: '\u103A\u102D\u1033',
    },
  ];
  outString = runPhase(rules4, outString);
  // Rules for phase 5
  var rules5 = [
    {
      p: RegExp('^' + '([\u1000-\u1021])\u103B\u103A', 'u'),
      s: '$1\u103A\u103B',
    },
    {
      p: RegExp('^' + '([\u103C-\u103E])\u103B', 'u'),
      s: '\u103B$1',
    },
    {
      p: RegExp('^' + '([\u103D\u103E])\u103C', 'u'),
      s: '\u103C$1',
    },
    {
      p: RegExp('^' + '\u103E\u103D', 'u'),
      s: '\u103D\u103E',
    },
    {
      p: RegExp('^' + '([\u102D-\u1030\u1032])\u103A([\u1000-\u1021])\u103A', 'u'),
      s: '$1$2\u103A',
    },
    {
      p: RegExp('^' + '\u102D\u103A', 'u'),
      s: '\u102D',
    },
    {
      p: RegExp('^' + '\u102E\u103A', 'u'),
      s: '\u102E',
    },
    {
      p: RegExp('^' + '\u102F\u103A', 'u'),
      s: '\u102F',
    },
    {
      p: RegExp('^' + '\u102D\u102E', 'u'),
      s: '\u102E',
    },
    {
      p: RegExp('^' + '\u102F\u1030', 'u'),
      s: '\u102F',
    },
    {
      p: RegExp('^' + '\u102B\u102B+', 'u'),
      s: '\u102B',
    },
    {
      p: RegExp('^' + '\u102C\u102C+', 'u'),
      s: '\u102C',
    },
    {
      p: RegExp('^' + '\u102D\u102D+', 'u'),
      s: '\u102D',
    },
    {
      p: RegExp('^' + '\u102E\u102E+', 'u'),
      s: '\u102E',
    },
    {
      p: RegExp('^' + '\u102F\u102F+', 'u'),
      s: '\u102F',
    },
    {
      p: RegExp('^' + '\u1030\u1030+', 'u'),
      s: '\u1030',
    },
    {
      p: RegExp('^' + '\u1031\u1031+', 'u'),
      s: '\u1031',
    },
    {
      p: RegExp('^' + '\u1032\u1032+', 'u'),
      s: '\u1032',
    },
    {
      p: RegExp('^' + '\u1036\u1036+', 'u'),
      s: '\u1036',
    },
    {
      p: RegExp('^' + '\u103A\u103A+', 'u'),
      s: '\u103A',
    },
    {
      p: RegExp('^' + '\u103B\u103B+', 'u'),
      s: '\u103B',
    },
    {
      p: RegExp('^' + '\u103C\u103C+', 'u'),
      s: '\u103C',
    },
    {
      p: RegExp('^' + '\u103D\u103D+', 'u'),
      s: '\u103D',
    },
    {
      p: RegExp('^' + '\u103E\u103E+', 'u'),
      s: '\u103E',
    },
    {
      p: RegExp('^' + '\u102F\u102D', 'u'),
      s: '\u102D\u102F',
    },
    {
      p: RegExp('^' + '\u102F\u1036', 'u'),
      s: '\u1036\u102F',
    },
    {
      p: RegExp('^' + '\u1039\u1037', 'u'),
      s: '\u1037\u1039',
    },
    {
      p: RegExp('^' + '\u103C\u1032', 'u'),
      s: '\u1032\u103C',
    },
    {
      p: RegExp('^' + '\u103C\u102E', 'u'),
      s: '\u102E\u103C',
    },
  ];
  outString = runPhase(rules5, outString);
  return outString;
}
// END OF TRANSLITERATION RULES
